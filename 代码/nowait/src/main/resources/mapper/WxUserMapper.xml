<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.yjg.mapper.WxUserMapper">
    <resultMap type="com.yjg.entity.WxUser" id="wxUserMap">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <!-- 根據起始行查詢7個微信用戶-->
    <select id="selectAllWxUser" resultMap="wxUserMap" parameterType="java.lang.Integer">
        SELECT id, openid, phone, createDate 
        FROM tb_wxuser 
        LIMIT #{row}, 7;
    </select>
    
    <!-- 查詢微信用戶個數--> 
    <select id="selectAllWxUserCount" resultType="int">
        SELECT COUNT(*) FROM tb_wxuser;
    </select>
    
    <!-- 根據單個id查詢單個微信用戶 -->
    <select id="selectWxUserById" resultMap="wxUserMap" parameterType="java.lang.Integer">
        SELECT id, openid, phone, createDate 
        FROM tb_wxuser 
        WHERE id = #{id}
    </select>
    
    
    <!-- 根據openid和phone查詢微信用戶個數 -->
    <select id="selectWxUserByOpenidOrPhone" resultType="int">
        SELECT COUNT(*) FROM tb_wxuser 
        WHERE openid = #{openid}
        OR phone = #{phone}
    </select>
    
    <!-- 根據id刪除單個微信用戶 -->
    <delete id="deleteWxUserById" parameterType="java.lang.Integer">
       DELETE FROM tb_wxuser 
       WHERE id = #{id}
    </delete>
    
    <!-- 根據多個id刪除多個對應的微信用戶 -->
    <delete id="deleteWxUserByIds" parameterType="Integer[]">
       DELETE FROM tb_wxuser 
       <where>
            id
            <foreach collection="id" item="id2" open="in(" close=")" separator=",">
                #{id2}
            </foreach>
       </where>
    </delete>
    
    <!-- 添加單個用戶 -->
    <insert id="insertWxUser">
        INSERT INTO tb_wxuser (openid,phone,createDate) 
        VALUES (#{openid},#{phone},NOW())
    </insert>
    
</mapper>